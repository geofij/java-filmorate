drop table if exists friends, likes, film_genres, users, films cascade;

create table if not exists users (
    id int generated by default as identity primary key,
    name varchar(255) not null,
    login varchar(255) not null,
    email varchar(255),
    birthday date,
    unique (login),
    unique (email)
);

create table if not exists mpa (
    id int generated by default as identity primary key,
    name varchar(255) not null
);

create table if not exists genres (
    id int generated by default as identity primary key,
    name varchar(255) not null
);

create table if not exists films (
    id int generated by default as identity primary key,
    name varchar(255) not null,
    description varchar(200),
    release_date date,
    duration int,
    mpa_id int references mpa (id) on delete cascade
);

create table if not exists likes (
    film_id integer not null references films (id) on delete cascade,
    user_id integer not null references users (id) on delete cascade ,
    primary key(film_id, user_id)
);

create table if not exists friends (
    user_id integer not null references users (id) on delete cascade ,
    friend_id integer not null references users (id) on delete cascade ,
    primary key (user_id, friend_id)
);

create table if not exists film_genres (
    film_id integer not null references films (id) on delete cascade,
    genre_id integer not null references genres (id) on delete cascade,
    primary key (film_id, genre_id)
);

-------
create table if not exists review (
    id int generated by default as identity primary key,
    film_id int not null references films (id) on delete cascade,
    description varchar(255)
);

create table if not exists review_like (
    user_id integer not null references users (id) on delete cascade ,
    review_id integer not null references review (id) on delete cascade ,
    is_like bool,
    primary key (user_id, review_id)
);

create table if not exists feed (
    event_id int generated by default as identity primary key,
    user_id integer not null references users (id),
    event_type varchar(255) not null,
    operation varchar(255) not null,
    entity_id integer not null,
    timestamp timestamp without time zone default (now() at time zone 'utc')
);

create table if not exists director (
    id int generated by default as identity primary key,
    name varchar(255) not null
);

create table if not exists film_director (
    film_id integer not null references films (id) on delete cascade,
    director_id integer not null references director (id) on delete cascade,
    primary key (film_id, director_id)
);